

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 31 17:40:03 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  007CD2                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _mask
    28  007CD2  7F                 	db	127
    29                           
    30                           ;initializer for _rx_command
    31  007CD3  70                 	db	112
    32                           
    33                           ;initializer for _spi_in0
    34  007CD4  40                 	db	64
    35                           
    36                           ;initializer for _spi_in1
    37  007CD5  41                 	db	65
    38  0000                     _ADCON1	set	4033
    39  0000                     _LATA	set	3977
    40  0000                     _LATAbits	set	3977
    41  0000                     _LATCbits	set	3979
    42  0000                     _PIE1	set	3997
    43  0000                     _PIE1bits	set	3997
    44  0000                     _PIR1bits	set	3998
    45  0000                     _PR2	set	4043
    46  0000                     _RCREG	set	4014
    47  0000                     _RCSTA	set	4011
    48  0000                     _RCSTAbits	set	4011
    49  0000                     _SPBRG	set	4015
    50  0000                     _SPBRGH	set	4016
    51  0000                     _SSPBUF	set	4041
    52  0000                     _SSPCON1	set	4038
    53  0000                     _SSPCON1bits	set	4038
    54  0000                     _SSPSTAT	set	4039
    55  0000                     _SSPSTATbits	set	4039
    56  0000                     _T2CON	set	4042
    57  0000                     _T2CONbits	set	4042
    58  0000                     _TMR2	set	4044
    59  0000                     _TRISA	set	3986
    60  0000                     _TRISAbits	set	3986
    61  0000                     _TRISB	set	3987
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISCbits	set	3988
    65  0000                     _TXREG	set	4013
    66  0000                     _TXSTA	set	4012
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _BRG16	set	32195
    69  0000                     _RCIF	set	31989
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  007D3A                     __pcinit:
    75                           	opt stack 0
    76  007D3A                     start_initialization:
    77                           	opt stack 0
    78  007D3A                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (1 bytes)
    82  007D3A  6A0F               	clrf	__pbssCOMRAM& (0+255),c
    83                           
    84                           ; Initialize objects allocated to COMRAM (4 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  007D3C  0ED2               	movlw	low __pidataCOMRAM
    87  007D3E  6EF6               	movwf	tblptrl,c
    88  007D40  0E7C               	movlw	high __pidataCOMRAM
    89  007D42  6EF7               	movwf	tblptrh,c
    90  007D44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91  007D46  6EF8               	movwf	tblptru,c
    92  007D48  EE00  F00B         	lfsr	0,__pdataCOMRAM
    93  007D4C  EE10 F004          	lfsr	1,4
    94  007D50                     copy_data0:
    95  007D50  0009               	tblrd		*+
    96  007D52  CFF5 FFEE          	movff	tablat,postinc0
    97  007D56  50E5               	movf	postdec1,w,c
    98  007D58  50E1               	movf	fsr1l,w,c
    99  007D5A  E1FA               	bnz	copy_data0
   100  007D5C                     end_of_initialization:
   101                           	opt stack 0
   102  007D5C                     __end_of__initialization:
   103                           	opt stack 0
   104  007D5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105  007D5E  6EF8               	movwf	tblptru,c
   106  007D60  0100               	movlb	0
   107  007D62  EF7A  F03F         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           postinc0	equ	0xFEE
   113                           postdec1	equ	0xFE5
   114                           fsr1l	equ	0xFE1
   115                           
   116                           	psect	bssCOMRAM
   117  00000F                     __pbssCOMRAM:
   118                           	opt stack 0
   119  00000F                     _n_mic:
   120                           	opt stack 0
   121  00000F                     	ds	1
   122                           tblptru	equ	0xFF8
   123                           tblptrh	equ	0xFF7
   124                           tblptrl	equ	0xFF6
   125                           tablat	equ	0xFF5
   126                           postinc0	equ	0xFEE
   127                           postdec1	equ	0xFE5
   128                           fsr1l	equ	0xFE1
   129                           
   130                           	psect	dataCOMRAM
   131  00000B                     __pdataCOMRAM:
   132                           	opt stack 0
   133  00000B                     _mask:
   134                           	opt stack 0
   135  00000B                     	ds	1
   136  00000C                     _rx_command:
   137                           	opt stack 0
   138  00000C                     	ds	1
   139  00000D                     _spi_in0:
   140                           	opt stack 0
   141  00000D                     	ds	1
   142  00000E                     _spi_in1:
   143                           	opt stack 0
   144  00000E                     	ds	1
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	cstackCOMRAM
   154  000001                     __pcstackCOMRAM:
   155                           	opt stack 0
   156  000001                     ??_IOpins:
   157  000001                     OpenSPI@bus_mode:
   158                           	opt stack 0
   159  000001                     OpenTimer2@config:
   160                           	opt stack 0
   161  000001                     selectMic@n_mic:
   162                           	opt stack 0
   163  000001                     OpenUSART@spbrg:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x0
   167  000001                     	ds	1
   168  000002                     ??_configTimer2:
   169  000002                     OpenSPI@smp_phase:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x1
   173  000002                     	ds	1
   174  000003                     ??_selectMic:
   175  000003                     OpenSPI@sync_mode:
   176                           	opt stack 0
   177  000003                     OpenUSART@config:
   178                           	opt stack 0
   179                           
   180                           ; 1 bytes @ 0x2
   181  000003                     	ds	1
   182  000004                     ??_configUSART:
   183  000004                     ??_configSPI:
   184                           
   185                           ; 0 bytes @ 0x3
   186  000004                     	ds	1
   187  000005                     configUSART@spbrg:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x4
   191  000005                     	ds	2
   192  000007                     configUSART@USARTconfig:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x6
   196  000007                     	ds	1
   197  000008                     ??_main:
   198                           
   199                           ; 0 bytes @ 0x7
   200  000008                     	ds	1
   201  000009                     main@pack_num:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x8
   205  000009                     	ds	1
   206  00000A                     main@dummy:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x9
   210  00000A                     	ds	1
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 109 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  dummy           1    9[COMRAM] unsigned char 
   229 ;;  pack_num        1    8[COMRAM] unsigned char 
   230 ;; Return value:  Size  Location     Type
   231 ;;		None               void
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   239 ;;      Params:         0       0       0       0       0       0       0       0       0
   240 ;;      Locals:         2       0       0       0       0       0       0       0       0
   241 ;;      Temps:          1       0       0       0       0       0       0       0       0
   242 ;;      Totals:         3       0       0       0       0       0       0       0       0
   243 ;;Total ram usage:        3 bytes
   244 ;; Hardware stack levels required when called:    2
   245 ;; This function calls:
   246 ;;		_IOpins
   247 ;;		_configSPI
   248 ;;		_configTimer2
   249 ;;		_configUSART
   250 ;;		_selectMic
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text0
   257  007EF4                     __ptext0:
   258                           	opt stack 0
   259  007EF4                     _main:
   260                           	opt stack 29
   261                           
   262                           ;main.c: 111: ADCON1 = 0x0F ;
   263                           
   264                           ;incstack = 0
   265  007EF4  0E0F               	movlw	15
   266  007EF6  6EC1               	movwf	4033,c	;volatile
   267                           
   268                           ;main.c: 112: TRISA = 1;
   269  007EF8  0E01               	movlw	1
   270  007EFA  6E92               	movwf	3986,c	;volatile
   271                           
   272                           ;main.c: 113: TRISB = 1;
   273  007EFC  0E01               	movlw	1
   274  007EFE  6E93               	movwf	3987,c	;volatile
   275                           
   276                           ;main.c: 114: TRISC = 1;
   277  007F00  0E01               	movlw	1
   278  007F02  6E94               	movwf	3988,c	;volatile
   279                           
   280                           ;main.c: 117: configUSART();
   281  007F04  ECCF  F03E         	call	_configUSART	;wreg free
   282                           
   283                           ;main.c: 118: configTimer2();
   284  007F08  EC7C  F03E         	call	_configTimer2	;wreg free
   285                           
   286                           ;main.c: 119: configSPI();
   287  007F0C  EC8C  F03E         	call	_configSPI	;wreg free
   288                           
   289                           ;main.c: 122: IOpins();
   290  007F10  ECB3  F03E         	call	_IOpins	;wreg free
   291                           
   292                           ;main.c: 124: uint8_t pack_num = 0;
   293  007F14  0E00               	movlw	0
   294  007F16  6E09               	movwf	main@pack_num,c
   295  007F18  D000               	goto	l1135
   296  007F1A                     l1135:
   297                           
   298                           ;main.c: 133: LATCbits.LATC0 = 0;
   299  007F1A  908B               	bcf	3979,0,c	;volatile
   300                           
   301                           ;main.c: 134: if (RCIF == 1)
   302  007F1C  AA9E               	btfss	3998,5,c	;volatile
   303  007F1E  D004               	goto	l1141
   304                           
   305                           ;main.c: 135: {
   306                           ;main.c: 136: rx_command = RCREG;
   307  007F20  CFAE F00C          	movff	4014,_rx_command	;volatile
   308                           
   309                           ;main.c: 137: RCIF = 0;
   310  007F24  9A9E               	bcf	3998,5,c	;volatile
   311  007F26  D000               	goto	l1141
   312  007F28                     l1141:
   313                           
   314                           ;main.c: 138: }
   315                           ;main.c: 140: if (rx_command == 0x73){
   316  007F28  0E73               	movlw	115
   317  007F2A  180C               	xorwf	_rx_command,w,c
   318  007F2C  A4D8               	btfss	status,2,c
   319  007F2E  D7F5               	goto	l1135
   320                           
   321                           ;main.c: 141: n_mic = 0;
   322  007F30  0E00               	movlw	0
   323  007F32  6E0F               	movwf	_n_mic,c
   324                           
   325                           ;main.c: 142: selectMic(n_mic);
   326  007F34  C00F  F001         	movff	_n_mic,selectMic@n_mic
   327  007F38  6A02               	clrf	selectMic@n_mic+1,c
   328  007F3A  EC17  F03F         	call	_selectMic	;wreg free
   329                           
   330                           ;main.c: 143: _delay((unsigned long)((1)*(48000000L/4000.0)));
   331  007F3E  0E10               	movlw	16
   332  007F40  6E08               	movwf	??_main& (0+255),c
   333  007F42  0E94               	movlw	148
   334  007F44                     u467:
   335  007F44  2EE8               	decfsz	wreg,f,c
   336  007F46  D7FE               	goto	u467
   337  007F48  2E08               	decfsz	??_main& (0+255),f,c
   338  007F4A  D7FC               	goto	u467
   339  007F4C  D000               	nop2	
   340  007F4E  D000               	goto	l1149
   341  007F50                     l1149:
   342                           
   343                           ;main.c: 146: if(n_mic == 0) {
   344  007F50  500F               	movf	_n_mic,w,c
   345  007F52  B4D8               	btfsc	status,2,c
   346  007F54  D002               	goto	l86
   347  007F56  D006               	goto	l1155
   348                           
   349                           ;main.c: 147: while((!TXSTAbits.TRMT));
   350  007F58  D000               	goto	l86
   351  007F5A                     l86:
   352  007F5A  A2AC               	btfss	4012,1,c	;volatile
   353  007F5C  D7FE               	goto	l86
   354                           
   355                           ;main.c: 148: TXREG = 65;
   356  007F5E  0E41               	movlw	65
   357  007F60  6EAD               	movwf	4013,c	;volatile
   358  007F62  D000               	goto	l1155
   359  007F64                     l1155:
   360                           
   361                           ;main.c: 149: }
   362                           ;main.c: 150: LATCbits.LATC0 = !LATCbits.LATC0;
   363  007F64  708B               	btg	3979,0,c	;volatile
   364                           
   365                           ;main.c: 152: LATAbits.LATA5 = 1;
   366  007F66  8A89               	bsf	3977,5,c	;volatile
   367                           
   368                           ;main.c: 153: _delay((unsigned long)((2)*(48000000L/4000000.0)));
   369  007F68  0E08               	movlw	8
   370  007F6A                     u477:
   371  007F6A  2EE8               	decfsz	wreg,f,c
   372  007F6C  D7FE               	goto	u477
   373                           
   374                           ;main.c: 154: unsigned char dummy;
   375                           ;main.c: 155: dummy = SSPBUF;
   376  007F6E  CFC9 F00A          	movff	4041,main@dummy	;volatile
   377                           
   378                           ;main.c: 156: LATAbits.LATA5 = 0;
   379  007F72  9A89               	bcf	3977,5,c	;volatile
   380                           
   381                           ;main.c: 158: SSPBUF = 0x00;
   382  007F74  0E00               	movlw	0
   383  007F76  6EC9               	movwf	4041,c	;volatile
   384                           
   385                           ;main.c: 159: while ( !SSPSTATbits.BF );
   386  007F78  D000               	goto	l89
   387  007F7A                     l89:
   388  007F7A  A0C7               	btfss	4039,0,c	;volatile
   389  007F7C  D7FE               	goto	l89
   390                           
   391                           ;main.c: 160: spi_in0 = SSPBUF;
   392  007F7E  CFC9 F00D          	movff	4041,_spi_in0	;volatile
   393                           
   394                           ;main.c: 162: SSPBUF = 0x00;
   395  007F82  0E00               	movlw	0
   396  007F84  6EC9               	movwf	4041,c	;volatile
   397                           
   398                           ;main.c: 163: while ( !SSPSTATbits.BF );
   399  007F86  D000               	goto	l92
   400  007F88                     l92:
   401  007F88  A0C7               	btfss	4039,0,c	;volatile
   402  007F8A  D7FE               	goto	l92
   403                           
   404                           ;main.c: 164: spi_in1 = SSPBUF;
   405  007F8C  CFC9 F00E          	movff	4041,_spi_in1	;volatile
   406                           
   407                           ;main.c: 169: spi_in0 = spi_in0 & mask;
   408  007F90  500D               	movf	_spi_in0,w,c
   409  007F92  140B               	andwf	_mask,w,c
   410  007F94  6E0D               	movwf	_spi_in0,c
   411                           
   412                           ;main.c: 172: n_mic = n_mic+1;
   413  007F96  280F               	incf	_n_mic,w,c
   414  007F98  6E0F               	movwf	_n_mic,c
   415                           
   416                           ;main.c: 173: selectMic(n_mic);
   417  007F9A  C00F  F001         	movff	_n_mic,selectMic@n_mic
   418  007F9E  6A02               	clrf	selectMic@n_mic+1,c
   419  007FA0  EC17  F03F         	call	_selectMic	;wreg free
   420                           
   421                           ;main.c: 178: while((!TXSTAbits.TRMT));
   422  007FA4  D000               	goto	l95
   423  007FA6                     l95:
   424  007FA6  A2AC               	btfss	4012,1,c	;volatile
   425  007FA8  D7FE               	goto	l95
   426                           
   427                           ;main.c: 179: TXREG = spi_in0;
   428  007FAA  C00D  FFAD         	movff	_spi_in0,4013	;volatile
   429                           
   430                           ;main.c: 180: while((!TXSTAbits.TRMT));
   431  007FAE  D000               	goto	l98
   432  007FB0                     l98:
   433  007FB0  A2AC               	btfss	4012,1,c	;volatile
   434  007FB2  D7FE               	goto	l98
   435                           
   436                           ;main.c: 181: TXREG = spi_in1;
   437  007FB4  C00E  FFAD         	movff	_spi_in1,4013	;volatile
   438                           
   439                           ;main.c: 184: LATCbits.LATC0 = !LATCbits.LATC0;
   440  007FB8  708B               	btg	3979,0,c	;volatile
   441                           
   442                           ;main.c: 185: if(n_mic==4) {
   443  007FBA  0E04               	movlw	4
   444  007FBC  180F               	xorwf	_n_mic,w,c
   445  007FBE  A4D8               	btfss	status,2,c
   446  007FC0  D7C7               	goto	l1149
   447                           
   448                           ;main.c: 186: n_mic=0;
   449  007FC2  0E00               	movlw	0
   450  007FC4  6E0F               	movwf	_n_mic,c
   451                           
   452                           ;main.c: 187: selectMic(n_mic);
   453  007FC6  C00F  F001         	movff	_n_mic,selectMic@n_mic
   454  007FCA  6A02               	clrf	selectMic@n_mic+1,c
   455  007FCC  EC17  F03F         	call	_selectMic	;wreg free
   456                           
   457                           ;main.c: 190: while((!TXSTAbits.TRMT));
   458  007FD0  D000               	goto	l102
   459  007FD2                     l102:
   460  007FD2  A2AC               	btfss	4012,1,c	;volatile
   461  007FD4  D7FE               	goto	l102
   462                           
   463                           ;main.c: 191: TXREG = 90;
   464  007FD6  0E5A               	movlw	90
   465  007FD8  6EAD               	movwf	4013,c	;volatile
   466                           
   467                           ;main.c: 192: _delay((unsigned long)((11)*(48000000L/4000000.0)));
   468  007FDA  0E2C               	movlw	44
   469  007FDC                     u487:
   470  007FDC  2EE8               	decfsz	wreg,f,c
   471  007FDE  D7FE               	goto	u487
   472                           
   473                           ;main.c: 202: if (RCIF == 1)
   474  007FE0  AA9E               	btfss	3998,5,c	;volatile
   475  007FE2  D004               	goto	l1187
   476                           
   477                           ;main.c: 203: {
   478                           ;main.c: 204: rx_command = RCREG;
   479  007FE4  CFAE F00C          	movff	4014,_rx_command	;volatile
   480                           
   481                           ;main.c: 205: RCIF = 0;
   482  007FE8  9A9E               	bcf	3998,5,c	;volatile
   483  007FEA  D000               	goto	l1187
   484  007FEC                     l1187:
   485                           
   486                           ;main.c: 206: }
   487                           ;main.c: 207: if(rx_command==0x70) break;
   488  007FEC  0E70               	movlw	112
   489  007FEE  180C               	xorwf	_rx_command,w,c
   490  007FF0  B4D8               	btfsc	status,2,c
   491  007FF2  D793               	goto	l1135
   492  007FF4  D7AD               	goto	l1149
   493  007FF6  D791               	goto	l1135
   494  007FF8  D7AB               	goto	l1149
   495  007FFA  D78F               	goto	l1135
   496  007FFC  EF00  F000         	goto	start
   497  008000                     __end_of_main:
   498                           	opt stack 0
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           status	equ	0xFD8
   508                           
   509 ;; *************** function _selectMic *****************
   510 ;; Defined at:
   511 ;;		line 214 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  n_mic           2    0[COMRAM] int 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;		None               void
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         2       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0
   527 ;;      Temps:          2       0       0       0       0       0       0       0       0
   528 ;;      Totals:         4       0       0       0       0       0       0       0       0
   529 ;;Total ram usage:        4 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text1
   539  007E2E                     __ptext1:
   540                           	opt stack 0
   541  007E2E                     _selectMic:
   542                           	opt stack 30
   543                           
   544                           ;main.c: 226: switch(n_mic){
   545                           
   546                           ;incstack = 0
   547  007E2E  D00D               	goto	l1117
   548  007E30                     l1103:
   549  007E30  0E0A               	movlw	10
   550  007E32  D009               	goto	L5
   551  007E34                     l1105:
   552  007E34  0E09               	movlw	9
   553  007E36  D007               	goto	L5
   554  007E38                     l1107:
   555  007E38  0E00               	movlw	0
   556  007E3A  D005               	goto	L5
   557  007E3C                     l1109:
   558  007E3C  0E0C               	movlw	12
   559  007E3E  D003               	goto	L5
   560  007E40                     l1111:
   561  007E40  0E0F               	movlw	15
   562  007E42  D001               	goto	L5
   563  007E44                     l1113:
   564  007E44  0E08               	movlw	8
   565  007E46                     L5:
   566  007E46  6E89               	movwf	3977,c	;volatile
   567                           
   568                           ;main.c: 246: }
   569                           
   570                           ;main.c: 245: break;
   571  007E48  D01C               	goto	l122
   572  007E4A                     l1117:
   573  007E4A  C001  F003         	movff	selectMic@n_mic,??_selectMic
   574  007E4E  C002  F004         	movff	selectMic@n_mic+1,??_selectMic+1
   575                           
   576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   577                           ; Switch size 1, requested type "space"
   578                           ; Number of cases is 1, Range of values is 0 to 0
   579                           ; switch strategies available:
   580                           ; Name         Instructions Cycles
   581                           ; simple_byte            4     3 (average)
   582                           ;	Chosen strategy is simple_byte
   583  007E52  5004               	movf	??_selectMic+1,w,c
   584  007E54  0A00               	xorlw	0	; case 0
   585  007E56  A4D8               	btfss	status,2,c
   586  007E58  D014               	goto	l122
   587                           
   588                           ; Switch size 1, requested type "space"
   589                           ; Number of cases is 6, Range of values is 0 to 5
   590                           ; switch strategies available:
   591                           ; Name         Instructions Cycles
   592                           ; simple_byte           19    10 (average)
   593                           ;	Chosen strategy is simple_byte
   594  007E5A  5003               	movf	??_selectMic,w,c
   595  007E5C  0A00               	xorlw	0	; case 0
   596  007E5E  B4D8               	btfsc	status,2,c
   597  007E60  D7F1               	goto	l1113
   598  007E62  0A01               	xorlw	1	; case 1
   599  007E64  B4D8               	btfsc	status,2,c
   600  007E66  D7E4               	goto	l1103
   601  007E68  0A03               	xorlw	3	; case 2
   602  007E6A  B4D8               	btfsc	status,2,c
   603  007E6C  D7E3               	goto	l1105
   604  007E6E  0A01               	xorlw	1	; case 3
   605  007E70  B4D8               	btfsc	status,2,c
   606  007E72  D7E2               	goto	l1107
   607  007E74  0A07               	xorlw	7	; case 4
   608  007E76  B4D8               	btfsc	status,2,c
   609  007E78  D7E1               	goto	l1109
   610  007E7A  0A01               	xorlw	1	; case 5
   611  007E7C  B4D8               	btfsc	status,2,c
   612  007E7E  D7E0               	goto	l1111
   613  007E80  D000               	goto	l122
   614  007E82                     l122:
   615  007E82  0012               	return		;funcret
   616  007E84                     __end_of_selectMic:
   617                           	opt stack 0
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           status	equ	0xFD8
   627                           
   628 ;; *************** function _configUSART *****************
   629 ;; Defined at:
   630 ;;		line 53 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  spbrg           2    4[COMRAM] int 
   635 ;;  USARTconfig     1    6[COMRAM] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;		None               void
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         0       0       0       0       0       0       0       0       0
   646 ;;      Locals:         3       0       0       0       0       0       0       0       0
   647 ;;      Temps:          1       0       0       0       0       0       0       0       0
   648 ;;      Totals:         4       0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        4 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    1
   652 ;; This function calls:
   653 ;;		_OpenUSART
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text2
   660  007D9E                     __ptext2:
   661                           	opt stack 0
   662  007D9E                     _configUSART:
   663                           	opt stack 29
   664                           
   665                           ;main.c: 54: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   666                           
   667                           ;incstack = 0
   668  007D9E  0E4F               	movlw	79
   669  007DA0  16AB               	andwf	4011,f,c	;volatile
   670  007DA2  9AAC               	bcf	4012,5,c	;volatile
   671  007DA4  0ECF               	movlw	207
   672  007DA6  169D               	andwf	3997,f,c	;volatile
   673                           
   674                           ;main.c: 56: int spbrg;
   675                           ;main.c: 57: unsigned char USARTconfig;
   676                           ;main.c: 59: USARTconfig = 0b01111111 &
   677                           ;main.c: 60: 0b11111111 &
   678                           ;main.c: 61: 0b11111111 &
   679                           ;main.c: 62: 0b11111111 &
   680                           ;main.c: 63: 0b11111101 &
   681                           ;main.c: 64: 0b11111110 &
   682                           ;main.c: 65: 0b11011111;
   683  007DA8  0E5C               	movlw	92
   684  007DAA  6E07               	movwf	configUSART@USARTconfig,c
   685                           
   686                           ;main.c: 67: spbrg = 3;
   687  007DAC  0E00               	movlw	0
   688  007DAE  6E06               	movwf	configUSART@spbrg+1,c
   689  007DB0  0E03               	movlw	3
   690  007DB2  6E05               	movwf	configUSART@spbrg,c
   691                           
   692                           ;main.c: 75: OpenUSART(USARTconfig, spbrg);
   693  007DB4  C005  F001         	movff	configUSART@spbrg,OpenUSART@spbrg
   694  007DB8  C006  F002         	movff	configUSART@spbrg+1,OpenUSART@spbrg+1
   695  007DBC  5007               	movf	configUSART@USARTconfig,w,c
   696  007DBE  EC42  F03F         	call	_OpenUSART
   697                           
   698                           ;main.c: 79: PIE1bits.RCIE = 1;
   699  007DC2  8A9D               	bsf	3997,5,c	;volatile
   700                           
   701                           ;main.c: 80: BRG16 = 1;
   702  007DC4  86B8               	bsf	4024,3,c	;volatile
   703                           
   704                           ;main.c: 82: _delay((unsigned long)((1)*(48000000L/4000.0)));
   705  007DC6  0E10               	movlw	16
   706  007DC8  6E04               	movwf	??_configUSART& (0+255),c
   707  007DCA  0E94               	movlw	148
   708  007DCC                     u497:
   709  007DCC  2EE8               	decfsz	wreg,f,c
   710  007DCE  D7FE               	goto	u497
   711  007DD0  2E04               	decfsz	??_configUSART& (0+255),f,c
   712  007DD2  D7FC               	goto	u497
   713  007DD4  D000               	nop2	
   714  007DD6  0012               	return		;funcret
   715  007DD8                     __end_of_configUSART:
   716                           	opt stack 0
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           postdec1	equ	0xFE5
   724                           fsr1l	equ	0xFE1
   725                           status	equ	0xFD8
   726                           
   727 ;; *************** function _OpenUSART *****************
   728 ;; Defined at:
   729 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  config          1    wreg     unsigned char 
   732 ;;  spbrg           2    0[COMRAM] unsigned int 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  config          1    2[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		wreg, status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         2       0       0       0       0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:         3       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:        3 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_configUSART
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text3
   758  007E84                     __ptext3:
   759                           	opt stack 0
   760  007E84                     _OpenUSART:
   761                           	opt stack 29
   762                           
   763                           ;incstack = 0
   764                           ;OpenUSART@config stored from wreg
   765  007E84  6E03               	movwf	OpenUSART@config,c
   766  007E86  0E00               	movlw	0
   767  007E88  6EAC               	movwf	4012,c	;volatile
   768  007E8A  0E00               	movlw	0
   769  007E8C  6EAB               	movwf	4011,c	;volatile
   770  007E8E  A003               	btfss	OpenUSART@config,0,c
   771  007E90  D002               	goto	l1017
   772  007E92  88AC               	bsf	4012,4,c	;volatile
   773  007E94  D000               	goto	l1017
   774  007E96                     l1017:
   775  007E96  A203               	btfss	OpenUSART@config,1,c
   776  007E98  D003               	goto	l1021
   777  007E9A  8CAC               	bsf	4012,6,c	;volatile
   778  007E9C  8CAB               	bsf	4011,6,c	;volatile
   779  007E9E  D000               	goto	l1021
   780  007EA0                     l1021:
   781  007EA0  A403               	btfss	OpenUSART@config,2,c
   782  007EA2  D002               	goto	l1025
   783  007EA4  8EAC               	bsf	4012,7,c	;volatile
   784  007EA6  D000               	goto	l1025
   785  007EA8                     l1025:
   786  007EA8  A603               	btfss	OpenUSART@config,3,c
   787  007EAA  D002               	goto	l196
   788  007EAC  88AB               	bsf	4011,4,c	;volatile
   789  007EAE  D002               	goto	l1029
   790  007EB0                     l196:
   791  007EB0  8AAB               	bsf	4011,5,c	;volatile
   792  007EB2  D000               	goto	l1029
   793  007EB4                     l1029:
   794  007EB4  B803               	btfsc	OpenUSART@config,4,c
   795  007EB6  84AC               	bsf	4012,2,c	;volatile
   796  007EB8  989E               	bcf	3998,4,c	;volatile
   797  007EBA  AA03               	btfss	OpenUSART@config,5,c
   798  007EBC  D002               	goto	l1037
   799  007EBE  86AB               	bsf	4011,3,c	;volatile
   800  007EC0  D000               	goto	l1037
   801  007EC2                     l1037:
   802  007EC2  AC03               	btfss	OpenUSART@config,6,c
   803  007EC4  D002               	goto	l200
   804  007EC6  8A9D               	bsf	3997,5,c	;volatile
   805  007EC8  D001               	goto	l201
   806  007ECA                     l200:
   807  007ECA  9A9D               	bcf	3997,5,c	;volatile
   808  007ECC                     l201:
   809  007ECC  9A9E               	bcf	3998,5,c	;volatile
   810  007ECE  AE03               	btfss	OpenUSART@config,7,c
   811  007ED0  D002               	goto	l202
   812  007ED2  889D               	bsf	3997,4,c	;volatile
   813  007ED4  D001               	goto	l203
   814  007ED6                     l202:
   815  007ED6  989D               	bcf	3997,4,c	;volatile
   816  007ED8                     l203:
   817  007ED8  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   818  007EDC  5002               	movf	OpenUSART@spbrg+1,w,c
   819  007EDE  6EB0               	movwf	4016,c	;volatile
   820  007EE0  8AAC               	bsf	4012,5,c	;volatile
   821  007EE2  8EAB               	bsf	4011,7,c	;volatile
   822  007EE4  9C94               	bcf	3988,6,c	;volatile
   823  007EE6  8E94               	bsf	3988,7,c	;volatile
   824  007EE8  B8AC               	btfsc	4012,4,c	;volatile
   825  007EEA  BEAC               	btfsc	4012,7,c	;volatile
   826  007EEC  D002               	goto	l205
   827  007EEE  8C94               	bsf	3988,6,c	;volatile
   828  007EF0  D000               	goto	l205
   829  007EF2                     l205:
   830  007EF2  0012               	return		;funcret
   831  007EF4                     __end_of_OpenUSART:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1l	equ	0xFE1
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _configTimer2 *****************
   844 ;; Defined at:
   845 ;;		line 93 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          1       0       0       0       0       0       0       0       0
   862 ;;      Totals:         1       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        1 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    1
   866 ;; This function calls:
   867 ;;		_CloseTimer2
   868 ;;		_OpenTimer2
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text4
   875  007CF8                     __ptext4:
   876                           	opt stack 0
   877  007CF8                     _configTimer2:
   878                           	opt stack 29
   879                           
   880                           ;main.c: 94: CloseTimer2();
   881                           
   882                           ;incstack = 0
   883  007CF8  EC6B  F03E         	call	_CloseTimer2	;wreg free
   884                           
   885                           ;main.c: 102: PR2 = 1;
   886  007CFC  0E01               	movlw	1
   887  007CFE  6ECB               	movwf	4043,c	;volatile
   888                           
   889                           ;main.c: 104: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   890  007D00  0E04               	movlw	4
   891  007D02  EC6E  F03E         	call	_OpenTimer2
   892                           
   893                           ;main.c: 105: _delay((unsigned long)((1)*(48000000L/4000.0)));
   894  007D06  0E10               	movlw	16
   895  007D08  6E02               	movwf	??_configTimer2& (0+255),c
   896  007D0A  0E94               	movlw	148
   897  007D0C                     u507:
   898  007D0C  2EE8               	decfsz	wreg,f,c
   899  007D0E  D7FE               	goto	u507
   900  007D10  2E02               	decfsz	??_configTimer2& (0+255),f,c
   901  007D12  D7FC               	goto	u507
   902  007D14  D000               	nop2	
   903  007D16  0012               	return		;funcret
   904  007D18                     __end_of_configTimer2:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           postdec1	equ	0xFE5
   913                           fsr1l	equ	0xFE1
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _OpenTimer2 *****************
   917 ;; Defined at:
   918 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  config          1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  config          1    0[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;		None               void
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         0       0       0       0       0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         1       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        1 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_configTimer2
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text5
   946  007CDC                     __ptext5:
   947                           	opt stack 0
   948  007CDC                     _OpenTimer2:
   949                           	opt stack 29
   950                           
   951                           ;incstack = 0
   952                           ;OpenTimer2@config stored from wreg
   953  007CDC  6E01               	movwf	OpenTimer2@config,c
   954  007CDE  5001               	movf	OpenTimer2@config,w,c
   955  007CE0  0BFB               	andlw	251
   956  007CE2  6ECA               	movwf	4042,c	;volatile
   957  007CE4  0E00               	movlw	0
   958  007CE6  6ECC               	movwf	4044,c	;volatile
   959  007CE8  929E               	bcf	3998,1,c	;volatile
   960  007CEA  AE01               	btfss	OpenTimer2@config,7,c
   961  007CEC  D002               	goto	l170
   962  007CEE  829D               	bsf	3997,1,c	;volatile
   963  007CF0  D001               	goto	l171
   964  007CF2                     l170:
   965  007CF2  929D               	bcf	3997,1,c	;volatile
   966  007CF4                     l171:
   967  007CF4  84CA               	bsf	4042,2,c	;volatile
   968  007CF6  0012               	return		;funcret
   969  007CF8                     __end_of_OpenTimer2:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _CloseTimer2 *****************
   982 ;; Defined at:
   983 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2close.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;		None               void
   990 ;; Registers used:
   991 ;;		None
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   997 ;;      Params:         0       0       0       0       0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_configTimer2
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011  007CD6                     __ptext6:
  1012                           	opt stack 0
  1013  007CD6                     _CloseTimer2:
  1014                           	opt stack 29
  1015                           
  1016                           ;incstack = 0
  1017  007CD6  94CA               	bcf	4042,2,c	;volatile
  1018  007CD8  929D               	bcf	3997,1,c	;volatile
  1019  007CDA  0012               	return		;funcret
  1020  007CDC                     __end_of_CloseTimer2:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _configSPI *****************
  1033 ;; Defined at:
  1034 ;;		line 85 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1051 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:        1 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		_OpenSPI
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text7
  1063  007D18                     __ptext7:
  1064                           	opt stack 0
  1065  007D18                     _configSPI:
  1066                           	opt stack 29
  1067                           
  1068                           ;main.c: 86: (SSPCON1 &=0xDF);
  1069                           
  1070                           ;incstack = 0
  1071  007D18  9AC6               	bcf	4038,5,c	;volatile
  1072                           
  1073                           ;main.c: 89: OpenSPI(0b00000011,0b00000001,0b10000000);
  1074  007D1A  0E01               	movlw	1
  1075  007D1C  6E01               	movwf	OpenSPI@bus_mode,c
  1076  007D1E  0E80               	movlw	128
  1077  007D20  6E02               	movwf	OpenSPI@smp_phase,c
  1078  007D22  0E03               	movlw	3
  1079  007D24  ECEC  F03E         	call	_OpenSPI
  1080                           
  1081                           ;main.c: 90: _delay((unsigned long)((1)*(48000000L/4000.0)));
  1082  007D28  0E10               	movlw	16
  1083  007D2A  6E04               	movwf	??_configSPI& (0+255),c
  1084  007D2C  0E94               	movlw	148
  1085  007D2E                     u517:
  1086  007D2E  2EE8               	decfsz	wreg,f,c
  1087  007D30  D7FE               	goto	u517
  1088  007D32  2E04               	decfsz	??_configSPI& (0+255),f,c
  1089  007D34  D7FC               	goto	u517
  1090  007D36  D000               	nop2	
  1091  007D38  0012               	return		;funcret
  1092  007D3A                     __end_of_configSPI:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec1	equ	0xFE5
  1101                           fsr1l	equ	0xFE1
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _OpenSPI *****************
  1105 ;; Defined at:
  1106 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\SPI\spi_open.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  sync_mode       1    wreg     unsigned char 
  1109 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1110 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;		None               void
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1122 ;;      Params:         2       0       0       0       0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1125 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1126 ;;Total ram usage:        3 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_configSPI
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136  007DD8                     __ptext8:
  1137                           	opt stack 0
  1138  007DD8                     _OpenSPI:
  1139                           	opt stack 29
  1140                           
  1141                           ;incstack = 0
  1142                           ;OpenSPI@sync_mode stored from wreg
  1143  007DD8  6E03               	movwf	OpenSPI@sync_mode,c
  1144  007DDA  0E3F               	movlw	63
  1145  007DDC  16C7               	andwf	4039,f,c	;volatile
  1146  007DDE  0E00               	movlw	0
  1147  007DE0  6EC6               	movwf	4038,c	;volatile
  1148  007DE2  5003               	movf	OpenSPI@sync_mode,w,c
  1149  007DE4  12C6               	iorwf	4038,f,c	;volatile
  1150  007DE6  5002               	movf	OpenSPI@smp_phase,w,c
  1151  007DE8  12C7               	iorwf	4039,f,c	;volatile
  1152  007DEA  D005               	goto	l1071
  1153  007DEC                     l140:
  1154  007DEC  8CC7               	bsf	4039,6,c	;volatile
  1155  007DEE  D013               	goto	l1075
  1156  007DF0                     l142:
  1157  007DF0  8CC7               	bsf	4039,6,c	;volatile
  1158  007DF2                     l143:
  1159  007DF2  88C6               	bsf	4038,4,c	;volatile
  1160  007DF4  D010               	goto	l1075
  1161  007DF6                     l1071:
  1162  007DF6  5001               	movf	OpenSPI@bus_mode,w,c
  1163                           
  1164                           ; Switch size 1, requested type "space"
  1165                           ; Number of cases is 3, Range of values is 0 to 3
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte           10     6 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170  007DF8  0A00               	xorlw	0	; case 0
  1171  007DFA  B4D8               	btfsc	status,2,c
  1172  007DFC  D7F7               	goto	l140
  1173  007DFE  0A02               	xorlw	2	; case 2
  1174  007E00  B4D8               	btfsc	status,2,c
  1175  007E02  D7F6               	goto	l142
  1176  007E04  0A01               	xorlw	1	; case 3
  1177  007E06  B4D8               	btfsc	status,2,c
  1178  007E08  D7F4               	goto	l143
  1179  007E0A  D005               	goto	l1075
  1180  007E0C                     l146:
  1181  007E0C  8A92               	bsf	3986,5,c	;volatile
  1182  007E0E                     l148:
  1183  007E0E  8293               	bsf	3987,1,c	;volatile
  1184  007E10  D00A               	goto	l147
  1185  007E12                     l149:
  1186  007E12  9293               	bcf	3987,1,c	;volatile
  1187  007E14  D008               	goto	l147
  1188  007E16                     l1075:
  1189  007E16  5003               	movf	OpenSPI@sync_mode,w,c
  1190                           
  1191                           ; Switch size 1, requested type "space"
  1192                           ; Number of cases is 2, Range of values is 4 to 5
  1193                           ; switch strategies available:
  1194                           ; Name         Instructions Cycles
  1195                           ; simple_byte            7     4 (average)
  1196                           ;	Chosen strategy is simple_byte
  1197  007E18  0A04               	xorlw	4	; case 4
  1198  007E1A  B4D8               	btfsc	status,2,c
  1199  007E1C  D7F7               	goto	l146
  1200  007E1E  0A01               	xorlw	1	; case 5
  1201  007E20  B4D8               	btfsc	status,2,c
  1202  007E22  D7F5               	goto	l148
  1203  007E24  D7F6               	goto	l149
  1204  007E26                     l147:
  1205  007E26  8093               	bsf	3987,0,c	;volatile
  1206  007E28  9E94               	bcf	3988,7,c	;volatile
  1207  007E2A  8AC6               	bsf	4038,5,c	;volatile
  1208  007E2C  0012               	return		;funcret
  1209  007E2E                     __end_of_OpenSPI:
  1210                           	opt stack 0
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           status	equ	0xFD8
  1220                           
  1221 ;; *************** function _IOpins *****************
  1222 ;; Defined at:
  1223 ;;		line 29 in file "main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;		None               void
  1230 ;; Registers used:
  1231 ;;		wreg
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        1 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text9
  1251  007D66                     __ptext9:
  1252                           	opt stack 0
  1253  007D66                     _IOpins:
  1254                           	opt stack 30
  1255                           
  1256                           ;main.c: 31: TRISAbits.TRISA0 = 0;
  1257                           
  1258                           ;incstack = 0
  1259  007D66  9092               	bcf	3986,0,c	;volatile
  1260                           
  1261                           ;main.c: 32: TRISAbits.TRISA1 = 0;
  1262  007D68  9292               	bcf	3986,1,c	;volatile
  1263                           
  1264                           ;main.c: 33: TRISAbits.TRISA2 = 0;
  1265  007D6A  9492               	bcf	3986,2,c	;volatile
  1266                           
  1267                           ;main.c: 34: TRISAbits.TRISA3 = 0;
  1268  007D6C  9692               	bcf	3986,3,c	;volatile
  1269                           
  1270                           ;main.c: 35: TRISAbits.TRISA4 = 0;
  1271  007D6E  9892               	bcf	3986,4,c	;volatile
  1272                           
  1273                           ;main.c: 36: TRISAbits.TRISA5 = 0;
  1274  007D70  9A92               	bcf	3986,5,c	;volatile
  1275                           
  1276                           ;main.c: 37: TRISBbits.TRISB0 = 1;
  1277  007D72  8093               	bsf	3987,0,c	;volatile
  1278                           
  1279                           ;main.c: 38: TRISBbits.TRISB1 = 0;
  1280  007D74  9293               	bcf	3987,1,c	;volatile
  1281                           
  1282                           ;main.c: 39: TRISBbits.TRISB2 = 0;
  1283  007D76  9493               	bcf	3987,2,c	;volatile
  1284                           
  1285                           ;main.c: 40: TRISBbits.TRISB3 = 0;
  1286  007D78  9693               	bcf	3987,3,c	;volatile
  1287                           
  1288                           ;main.c: 41: TRISBbits.TRISB4 = 0;
  1289  007D7A  9893               	bcf	3987,4,c	;volatile
  1290                           
  1291                           ;main.c: 42: TRISBbits.TRISB5 = 1;
  1292  007D7C  8A93               	bsf	3987,5,c	;volatile
  1293                           
  1294                           ;main.c: 43: TRISBbits.TRISB6 = 1;
  1295  007D7E  8C93               	bsf	3987,6,c	;volatile
  1296                           
  1297                           ;main.c: 44: TRISBbits.TRISB7 = 1;
  1298  007D80  8E93               	bsf	3987,7,c	;volatile
  1299                           
  1300                           ;main.c: 45: TRISCbits.TRISC0 = 0;
  1301  007D82  9094               	bcf	3988,0,c	;volatile
  1302                           
  1303                           ;main.c: 46: TRISCbits.TRISC1 = 0;
  1304  007D84  9294               	bcf	3988,1,c	;volatile
  1305                           
  1306                           ;main.c: 47: TRISCbits.TRISC2 = 0;
  1307  007D86  9494               	bcf	3988,2,c	;volatile
  1308                           
  1309                           ;main.c: 48: TRISCbits.TRISC6 = 0;
  1310  007D88  9C94               	bcf	3988,6,c	;volatile
  1311                           
  1312                           ;main.c: 49: TRISCbits.TRISC7 = 1;
  1313  007D8A  8E94               	bsf	3988,7,c	;volatile
  1314                           
  1315                           ;main.c: 50: _delay((unsigned long)((1)*(48000000L/4000.0)));
  1316  007D8C  0E10               	movlw	16
  1317  007D8E  6E01               	movwf	??_IOpins& (0+255),c
  1318  007D90  0E94               	movlw	148
  1319  007D92                     u527:
  1320  007D92  2EE8               	decfsz	wreg,f,c
  1321  007D94  D7FE               	goto	u527
  1322  007D96  2E01               	decfsz	??_IOpins& (0+255),f,c
  1323  007D98  D7FC               	goto	u527
  1324  007D9A  D000               	nop2	
  1325  007D9C  0012               	return		;funcret
  1326  007D9E                     __end_of_IOpins:
  1327                           	opt stack 0
  1328  0000                     tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           postdec1	equ	0xFE5
  1335                           fsr1l	equ	0xFE1
  1336                           status	equ	0xFD8
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec1	equ	0xFE5
  1344                           fsr1l	equ	0xFE1
  1345                           status	equ	0xFD8
  1346                           
  1347                           	psect	rparam
  1348  0000                     tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           postdec1	equ	0xFE5
  1355                           fsr1l	equ	0xFE1
  1356                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_configUSART
    _configUSART->_OpenUSART
    _configTimer2->_OpenTimer2
    _configSPI->_OpenSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     792
                                              7 COMRAM     3     3      0
                             _IOpins
                          _configSPI
                       _configTimer2
                        _configUSART
                          _selectMic
 ---------------------------------------------------------------------------------
 (1) _selectMic                                            4     2      2     214
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _configUSART                                          4     4      0     330
                                              3 COMRAM     4     4      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configTimer2                                         1     1      0      30
                                              1 COMRAM     1     1      0
                        _CloseTimer2
                         _OpenTimer2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer2                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CloseTimer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configSPI                                            1     1      0     216
                                              3 COMRAM     1     1      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     216
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _IOpins                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOpins
   _configSPI
     _OpenSPI
   _configTimer2
     _CloseTimer2
     _OpenTimer2
   _configUSART
     _OpenUSART
   _selectMic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       F       1       15.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      20        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 31 17:40:03 2023

            _SSPSTATbits 000FC7                       l92 7F88                       l86 7F5A  
                     l95 7FA6                       l89 7F7A                       l98 7FB0  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l102 7FD2                      l200 7ECA                      l201 7ECC  
                    l202 7ED6                      l122 7E82                      l203 7ED8  
                    l140 7DEC                      l205 7EF2                      l142 7DF0  
                    l143 7DF2                      l146 7E0C                      l170 7CF2  
                    l147 7E26                      l171 7CF4                      l148 7E0E  
                    l149 7E12                      l196 7EB0             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      u507 7D0C  
                    u517 7D2E                      u527 7D92                      u467 7F44  
                    u477 7F6A                      u487 7FDC                      u497 7DCC  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   l1021 7EA0                     l1111 7E40                     l1103 7E30  
                   l1025 7EA8                     l1017 7E96                     l1113 7E44  
                   l1105 7E34                     l1107 7E38                     l1037 7EC2  
                   l1029 7EB4                     l1109 7E3C                     l1117 7E4A  
                   l1141 7F28                     l1071 7DF6                     l1135 7F1A  
                   l1075 7E16                     l1155 7F64                     l1149 7F50  
                   l1187 7FEC                     _LATA 000F89                     _PIE1 000F9D  
                   _RCIF 007CF5                     _TMR2 000FCC           ??_configTimer2 0002  
                   _main 7EF4                     _mask 000B                     fsr1l 000FE1  
                   start 0000            __CFG_IESO$OFF 000000      __end_of_CloseTimer2 7CDC  
           ___param_bank 000010          __end_of_OpenSPI 7E2E            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _BRG16 007DC3  
                  _T2CON 000FCA             main@pack_num 0009                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TXREG 000FAD                    _TXSTA 000FAC            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _n_mic 000F                    tablat 000FF5  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 7D3A  
           __end_of_main 8000                   ??_main 0008            __activetblptr 000002  
                 _ADCON1 000FC1               _OpenTimer2 7CDC              _CloseTimer2 7CD6  
                 _SPBRGH 000FB0                   _SSPBUF 000FC9                   _IOpins 7D66  
              ??_OpenSPI 0003     __size_of_configUSART 003A           __CFG_XINST$OFF 000000  
     __size_of_OpenUSART 0070           __CFG_STVREN$ON 000000         OpenTimer2@config 0001  
   __end_of_configTimer2 7D18             __pdataCOMRAM 000B                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7D5C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_configSPI 0022        __end_of_OpenUSART 7EF4  
            ?_OpenTimer2 0001                  ?_IOpins 0001       __size_of_selectMic 0056  
       configUSART@spbrg 0005                  _SSPCON1 000FC6                  _SSPSTAT 000FC7  
        __CFG_VREGEN$OFF 000000          __size_of_IOpins 0038                  _OpenSPI 7DD8  
                __Hparam 0000                  __Lparam 0000        __end_of_configSPI 7D3A  
  __size_of_configTimer2 0020                  __pcinit 7D3A                  __ramtop 0800  
    __size_of_OpenTimer2 001C                  __ptext0 7EF4                  __ptext1 7E2E  
                __ptext2 7D9E                  __ptext3 7E84                  __ptext4 7CF8  
                __ptext5 7CDC                  __ptext6 7CD6                  __ptext7 7D18  
                __ptext8 7DD8                  __ptext9 7D66                _T2CONbits 000FCA  
                _spi_in0 000D                  _spi_in1 000E     end_of_initialization 7D5C  
      __end_of_selectMic 7E84             ?_CloseTimer2 0001            __Lmediumconst 0000  
           _configTimer2 7CF8                _RCSTAbits 000FAB                  postdec1 000FE5  
                postinc0 000FEE                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94               _rx_command 000C            ??_configUSART 0004  
              _TXSTAbits 000FAC           __end_of_IOpins 7D9E            __pidataCOMRAM 7CD2  
       OpenSPI@smp_phase 0002      start_initialization 7D3A         OpenSPI@sync_mode 0003  
           ??_OpenTimer2 0001                _OpenUSART 7E84                 ??_IOpins 0001  
    __end_of_configUSART 7DD8         __CFG_LPT1OSC$OFF 000000       __end_of_OpenTimer2 7CF8  
            __pbssCOMRAM 000F   configUSART@USARTconfig 0007               ?_OpenUSART 0001  
   __size_of_CloseTimer2 0006                 ?_OpenSPI 0001                _configSPI 7D18  
               _LATAbits 000F89                 _LATCbits 000F8B              _configUSART 7D9E  
               _PIE1bits 000F9D                _selectMic 7E2E                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               ?_configSPI 0001          OpenSPI@bus_mode 0001  
              main@dummy 000A                copy_data0 7D50              ??_OpenUSART 0003  
        OpenUSART@config 0003               ?_selectMic 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of_OpenSPI 0056            __size_of_main 010C  
            ??_configSPI 0004    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
            ??_selectMic 0003           selectMic@n_mic 0001              _SSPCON1bits 000FC6  
     __CFG_FOSC$HSPLL_HS 000000            ??_CloseTimer2 0001             ?_configUSART 0001  
          ?_configTimer2 0001  
